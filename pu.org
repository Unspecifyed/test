* Crontab
  Schedules tasks; min hour day-of-the-month month day-of-the-week.
  Ex: crontab -e opens a text file.
  Ex: 00 05 * * 0 ls > /home/francis/cronres.txt
* Git
** Git start project 
  git init
  git remote add origin https://github.com/...
** Git configure
   git config --global user.name "Francis"
   git config --global user.email francis@email.com
** Git pull
   git pull origin master
*** Set upstream
    git branch --set-upstream-to=origin/master
** Git add and push
   git add filename ; or
   git add -A ; for all files
   git commit -m "updated"; commits to master branch
** Git remove
   git rm -r -f directory-name ; removes a directory 
** Git ignore
   git-ignore directory-name/* ;ignores a directory
** Git merge
   git fetch origin master; gets from the repository that is ahead.
   git merge; adds your changes to the repository as well as the new one.
** Git branches
   git checkout v01 ; or
   git checkout master
   git merge v01 master
   git push origin master
*** make new branch
    git branch name-of-branch
    git pull
    git checkout -b name-of-branch
    git push origin name-of-branch
*** Delete branch
    git branch -d name-of-branch; deletes local
    git branch -D name-of-branch; force delete
* Tar
  tar -xvcf for tar.gz
  tar -xvf creates a bundle directory
* Meteor
** init
   meteor create todo
   meteor add twbs:bootstrap
   meteor add kadira:react-layout kadira:flow-router
   webstorm; an ide
   
   meteor build ../todo-app
   cp todo.tar.gz /var/www/html
   tar -xvf ; creates a bundle directory
   install node.js
   cd programs/server
   sudo npm install 
   sudo systemctl start mongodb
   mongo
   use app
   db.createUser({name: "francis", pwd: "password", roles: [{role: "readWrite", db: "app"}]})
   /etc/mongodb.conf
   auth =true
   sudo systemctl restart mongodb
   sudo a2enmod proxy
   sudo a2enmod proxy_html
   sudo a2enmod proxy_http
   /etc/apache2
   touch ./sites-available/app.conf
   <VirtualHost *:80>
   ServerName app.localhost
   ProxyRequests Off
   
   <Proxy *>
   order deny,allow
   Allow from all
   </Proxy>
   
   <Location />
   ProxyPass http://localhost:58080/
   ProxyPassReverse http://localhost:58080/
   </Location>
   
   sudo a2ensite app
   sudo systemctl restart apache2
   /var/www/html/bundle
   export MYVAR="This is a variable"
   echo $MYVAR
   ~/Documents/env.sh
   #!/user/bin/sh
   export PORT=58080
   export ROOT_URL=http://app.localhost
   export MONGOT_URL=mongotdb://francis:password@localhost:27017/app
   source ~/Documents/env.sh
   echo $PORT
   nodejs main.js
   sudo npm install -g forever
   forever start main.js
   
   sudo a2enmod rewrite
   sudo apt-get install phpmyadmin
   /etc/apache2/apache2.conf
   include /etc/phpmyadmin/apache.conf
   sudo systemctl restart apache2
   
   
   create Directorys in project. Client,lib,Server
*** Client
    make directory called Componets
**** MainLayout.jsx
     MainLayout = React.createClass({
     render(){
     return(
     <div>
     
*** lib
    make file Router.jsx
    FlowRouter.rount("/", {
    name: "Home",
    action(params){
    renderView(<Home />);
    }
    });
    
    function renderView(componet){
    ReactLayout.render(MainLayout, {
    header: <Header/>,
    content: component,
    footer: <Footer />
    });
    }
* VirtualHost
  /var/www/html
  mkdir site1 site2 
  touch ./site1/index.html ./site2/index.html
  /etc/apache2
  touch ./sites-available/site1.conf ...site2
  <VirtualHost *:80>
  ServerName example.com; site1.localhost
  DocumentRoot /var/www/html/site1
  </VirtualHost>
  
  /etc/hosts
  127.0.0.1 site1.localhost ...site2
  sudo systemctl start apache2
  sudo a2ensite site1 site2
  sudo systemct restart apache2
* Wordpress
  Download wordpress.
  cp wordpress /var/www/html/
  /etc/apache2/sites-available
  sudo a3enmod rewrite
  touch wordpress.config
  <VirtualHost *:80>
  ServerName wordpress.localhost
  DocumentRoot /var/www/html/wordpress
  <Directory />
  Options FollowSymLinks
  AllowOerride All
  </Directory>
  
  <Directory /var/www/html/wordpress
  Options Indexes FollowSymLinks MultiViews
  AllowOerride All
  Order allow,deny
  allow from all
  </Directory>
  </VirtualHost>
  sudo a2ensite wordpress
  sudo systemctl restart apache
  wordpress.localhost

* Apache
  sudo apt-get install apache2 php5 mysql-server php5-common
  sudo systemctl start apache2
  localhost
  sudo chown -R francis:francis /var/www
  cd /etc/apache2
  sudo systemctl restart apache2
  cd /var/www/html
  vi index.php
  <?php
  echo "hello world";
  ?>

** envnars
   export APACHE_RUN_USER=francis
   export APACHE_RUN_GROUP=francis

** hosts
   /etc/hosts
   The local address for any machine is 127.0.0.1
* OpenBox
  sudo apt-get install openbox obconf obmenu
  right click obconf
  obmenu ; in terminal 
  Obmenu is what comes up when you right click.
  sudo apt-get install tint2; this installs a panel.
  sudo apt-get install nitrogen; this allows for a wallpaper.
  In your home directory. .config/openbox/autostart.sh is what you need to edit to start programs.
  Ex: nitrogen --restore
  Ex: tint2
  Ex: ~/.config/openbox/rc.xml
* Web Python
  atp-cache policy python; finds version
  python-pip3; installs modules
  you can call up versions of python Ex: python3.3
  sudo pip install web.py
  
  #+BEGIN_SRC python
        #!/usr/bin/python
        import web

        urls =('/', 'myClass')
        class myClass:
            def GET(self):
                return "<h1>Hello World</h1>"

    class secondClass:
        def GET(self):
            return "<h1>This is a second rout</h1>"
    application = web.application(urls, globals()).wsgifunc()
  #+END_SRC
* User accounts
  sudo adduser nick2
  su nick2; allows you to login as user
  sudo adduser nick2 sudo; gives sudo to nick2
  sudo deluser nick2; removes user
  sudo passwd nick2; changes password
  sudo groupadd tt; adds group tt
  sudo chown nick2:tt filename; changes group access
  sudo adduser nick2 tt; adds user to group tt
* Networking
  192.168.0.1; is likely the address if router
  192.168.0.19 ..20..21; for computers on the network
  127.0.0.1; always means ip address for this computer
** ifconfig
   eno1 is Ethernet
   lo local loopback localhost
   wlo1 wireless internet RX received TX transferred out
** tcpdump
   runs until you cancel 
   sudo tcpdump -c 10; gets 10 packets
   order: time, from ip, to ip (router) (or visa versa), where it ends up
   sudo tcpdump -c 5 -A; prints out 5 of actually packets
   sudo tcpdump -c 5 -i wlo1; listens to the interface given
   sudo tcpdump -XX -i wlo1; gives hexdump of device
   sudo tcpdump -1 wlo1 port 22; listens to port 22
