* Crontab
  Schedules tasks; min hour day-of-the-month month day-of-the-week.
  Ex: crontab -e opens a text file.
  Ex: 00 05 * * 0 ls > /home/francis/cronres.txt
* Git
** Git start project 
  git init
  git remote add origin https://github.com/...
** Git configure
   git config --global user.name "Francis"
   git config --global user.email francis@email.com
** Git pull
   git pull origin master
*** Set upstream
    git branch --set-upstream-to=origin/master
** Git add and push
   git add filename ; or
   git add -A ; for all files
   git commit -m "updated"; commits to master branch
** Git remove
   git rm -r -f directory-name ; removes a directory 
** Git ignore
   git-ignore directory-name/* ;ignores a directory
** Git merge
   git fetch origin master; gets from the repository that is ahead.
   git merge; adds your changes to the repository as well as the new one.
** Git branches
   git checkout v01 ; or
   git checkout master
   git merge v01 master
   git push origin master
*** make new branch
    git branch name-of-branch
    git pull
    git checkout -b name-of-branch
    git push origin name-of-branch
*** Delete branch
    git branch -d name-of-branch; deletes local
    git branch -D name-of-branch; force delete
* Tar
  tar -xvcf for tar.gz
  tar -xvf creates a bundle directory
* Meteor
** init
   meteor create todo
   meteor add twbs:bootstrap
   meteor add kadira:react-layout kadira:flow-router
   webstorm; an ide
   
   meteor build ../todo-app
   cp todo.tar.gz /var/www/html
   tar -xvf ; creates a bundle directory
   install node.js
   cd programs/server
   sudo npm install 
   sudo systemctl start mongodb
   mongo
   use app
   db.createUser({name: "francis", pwd: "password", roles: [{role: "readWrite", db: "app"}]})
   /etc/mongodb.conf
   auth =true
   sudo systemctl restart mongodb
   sudo a2enmod proxy
   sudo a2enmod proxy_html
   sudo a2enmod proxy_http
   /etc/apache2
   touch ./sites-available/app.conf
   <VirtualHost *:80>
   ServerName app.localhost
   
   
   create Directorys in project. Client,lib,Server
*** Client
    make directory called Componets
**** MainLayout.jsx
     MainLayout = React.createClass({
     render(){
     return(
     <div>
     
*** lib
    make file Router.jsx
    FlowRouter.rount("/", {
    name: "Home",
    action(params){
    renderView(<Home />);
    }
    });
    
    function renderView(componet){
    ReactLayout.render(MainLayout, {
    header: <Header/>,
    content: component,
    footer: <Footer />
    });
    }

* Apache
  sudo apt-get install apache2 php5 mysql-server php5-common
  sudo systemctl start apache2
  localhost
  sudo chown -R francis:francis /var/www
  cd /etc/apache2
  sudo systemctl restart apache2
  cd /var/www/html
  vi index.php
  <?php
  echo "hello world";
  ?>

** envnars
   export APACHE_RUN_USER=francis
   export APACHE_RUN_GROUP=francis

** hosts
   /etc/hosts
   The local address for any machine is 127.0.0.1
* OpenBox
  sudo apt-get install openbox obconf obmenu
  right click obconf
  obmenu ; in terminal 
  Obmenu is what comes up when you right click.
  sudo apt-get install tint2; this installs a panel.
  sudo apt-get install nitrogen; this allows for a wallpaper.
  In your home directory. .config/openbox/autostart.sh is what you need to edit to start programs.
  Ex: nitrogen --restore
  Ex: tint2
  Ex: ~/.config/openbox/rc.xml
